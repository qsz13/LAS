library(igraph)
subg <- induced.subgraph(g, w)
w = which(testz==1)
subg <- induced.subgraph(g, w)
w
plot(subg)
testz = result['1000',]
cutoff=0.5
testz[testz>=cutoff] = 1
testz[testz< cutoff] = 0
max(testz)
w = which(testz==1)
subg <- induced.subgraph(g, w)
plot(subg)
w
testz = result['1000',]
cutoff=0.5
testz[testz>=cutoff] = 1
testz[testz< cutoff] = 0
max(testz)
w = which(testz==1)
subg <- induced.subgraph(g, w)
walktrap.community(subg)
count(w)
len(z)
length(z)
length(w)
testz = result['1000',]
cutoff=0.8
testz[testz>=cutoff] = 1
testz[testz< cutoff] = 0
max(testz)
w = which(testz==1)
subg <- induced.subgraph(g, w)
walktrap.community(subg)
testz = result['1000',]
cutoff=1
testz[testz>=cutoff] = 1
testz[testz< cutoff] = 0
max(testz)
w = which(testz==1)
subg <- induced.subgraph(g, w)
walktrap.community(subg)
testz = result['1000',]
cutoff=1.2
testz[testz>=cutoff] = 1
testz[testz< cutoff] = 0
max(testz)
w = which(testz==1)
length(w)
subg <- induced.subgraph(g, w)
walktrap.community(subg)
testz = result['1000',]
cutoff=1.1
testz[testz>=cutoff] = 1
testz[testz< cutoff] = 0
max(testz)
w = which(testz==1)
length(w)
subg <- induced.subgraph(g, w)
walktrap.community(subg)
cutoff=1
testz = result['1000',]
cutoff=1
testz[testz>=cutoff] = 1
testz[testz< cutoff] = 0
max(testz)
w = which(testz==1)
length(w)
subg <- induced.subgraph(g, w)
walktrap.community(subg)
testz = result['1000',]
max(testz)
testz = result['1000',]
cutoff=1.5
testz[testz>=cutoff] = 1
testz[testz< cutoff] = 0
max(testz)
w = which(testz==1)
length(w)
subg <- induced.subgraph(g, w)
walktrap.community(subg)
plot(subg)
length(w)
testz = result['1000',]
max(testz)
testz[testz>=cutoff] = 1
testz[testz< cutoff] = 0
max(testz)
testz = result['1000',]
which.max(testz)
testz
testz['2885']
testz['2603']
which.max(testz)
testz['2603']
testz = result['1000',]
cutoff=1.5
testz[testz>=cutoff] <- 1
testz[testz< cutoff] <- 0
max(testz)
testz = result['1000',]
cutoff=1.5
testz[testz>=1.5] <- 1
testz[testz<cutoff] <- 0
max(testz)
testz = result['1000',]
cutoff=1
testz[testz>=cutoff] <- 1
testz[testz<cutoff] <- 0
max(testz)
w = which(testz==1)
length(w)
w
testz = result['1000',]
cutoff=2
testz[testz>=cutoff] <- 1
testz[testz<cutoff] <- 0
max(testz)
testz = result['1000',]
cutoff=2
testz[testz<cutoff] <- 0
max(testz)
testz[testz>=cutoff] <- 1
max(testz)
testz = result['1000',]
cutoff=2
testz[testz>=cutoff] <- 1
testz[testz<cutoff] <- 0
max(testz)
testz = result['1000',]
cutoff=2
testz[testz<cutoff] <- 0
testz[testz>=cutoff] <- 1
max(testz)
w = which(testz==1)
length(w)
subg <- induced.subgraph(g, w)
walktrap.community(subg)
plot(subg)
testz = result['1000',]
cutoff=1.5
testz[testz<cutoff] <- 0
testz[testz>=cutoff] <- 1
max(testz)
w = which(testz==1)
length(w)
subg <- induced.subgraph(g, w)
walktrap.community(subg)
plot(subg)
testz = result['1000',]
cutoff=1.3
testz[testz<cutoff] <- 0
testz[testz>=cutoff] <- 1
max(testz)
w = which(testz==1)
length(w)
subg <- induced.subgraph(g, w)
walktrap.community(subg)
plot(subg)
testz = result['5700',]
cutoff=1.3
testz[testz<cutoff] <- 0
testz[testz>=cutoff] <- 1
max(testz)
w = which(testz==1)
length(w)
subg <- induced.subgraph(g, w)
walktrap.community(subg)
plot(subg)
testz = result['5700',]
max(testz)
testz = result['5700',]
cutoff=1.3
testz[testz<cutoff] <- 0
testz[testz>=cutoff] <- 1
max(testz)
w = which(testz==1)
length(w)
subg <- induced.subgraph(g, w)
walktrap.community(subg)
plot(subg)
testz = result['5700',]
cutoff=1
testz[testz<cutoff] <- 0
testz[testz>=cutoff] <- 1
max(testz)
w = which(testz==1)
length(w)
subg <- induced.subgraph(g, w)
walktrap.community(subg)
plot(subg)
w
testz = result['9354',]
cutoff=1
testz[testz<cutoff] <- 0
testz[testz>=cutoff] <- 1
max(testz)
w = which(testz==1)
length(w)
subg <- induced.subgraph(g, w)
walktrap.community(subg)
plot(subg)
testz = result['9354',]
cutoff=1.5
testz[testz<cutoff] <- 0
testz[testz>=cutoff] <- 1
max(testz)
w = which(testz==1)
length(w)
subg <- induced.subgraph(g, w)
walktrap.community(subg)
plot(subg)
testz = result['9354',]
cutoff=1.5
testz[testz<cutoff] <- 0
testz[testz>=cutoff] <- 1
max(testz)
w = which(testz==1)
length(w)
subg <- induced.subgraph(graph=g,vids=w)
walktrap.community(subg)
plot(subg)
testz = result['9354',]
cutoff=1.5
testz[testz<cutoff] <- 0
testz[testz>=cutoff] <- 1
max(testz)
w = which(testz==1)
length(w)
subg <- induced.subgraph(graph=g,vids=w)
walktrap.community(subg)
network = asNetwork(subg)
ggnet(network,size=4,segment.size=1)
library(GGally)
library(intergraph)
library(network)
testz = result['9354',]
cutoff=1.5
testz[testz<cutoff] <- 0
testz[testz>=cutoff] <- 1
max(testz)
w = which(testz==1)
length(w)
subg <- induced.subgraph(graph=g,vids=w)
walktrap.community(subg)
network = asNetwork(subg)
ggnet(network,size=4,segment.size=1)
testdata =newresult['5700',]
target = names(testdata[testdata>0.6])
testdata =result['5700',]
target = names(testdata[testdata>0.6])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=4,segment.size=1)
testdata =result['5700',]
target = names(testdata[testdata>0.6])
terget.graph = induced.subgraph(graph=g,vids=target)
plot(terget.graph)
testz = result['5700',]
cutoff=1.5
testz[testz<cutoff] <- 0
testz[testz>=cutoff] <- 1
max(testz)
w = which(testz==1)
length(w)
w
testz = result['5700',]
cutoff=0.6
testz[testz<cutoff] <- 0
testz[testz>=cutoff] <- 1
max(testz)
w = which(testz==1)
length(w)
w
testdata =result['5700',]
target = names(testdata[testdata>0.6])
target
testz = result['5700',]
cutoff=0.6
w = names(testz[testz>cutoff])
subg <- induced.subgraph(graph=g,vids=w)
walktrap.community(subg)
network = asNetwork(subg)
ggnet(network,size=4,segment.size=1)
testz = result['5700',]
cutoff=0.8
w = names(testz[testz>cutoff])
subg <- induced.subgraph(graph=g,vids=w)
walktrap.community(subg)
network = asNetwork(subg)
ggnet(network,size=4,segment.size=1)
testz = result['5700',]
cutoff=0.6
w = names(testz[testz>cutoff])
subg <- induced.subgraph(graph=g,vids=w)
walktrap.community(subg)
network = asNetwork(subg)
ggnet(network,size=4,segment.size=1)
wc = walktrap.community(subg)
wc
length(wc)
length(wc)
modularity(wc)
membership(wc)
modularity(wc)
crossing(wc, subg)
showtrace(wc)
merges(wc)
cutat(wc)
cutat(wc, no, steps)
membership(wc)
library(igraph)
library(LAS)
getgobp(g,result)
Q
library(LAS)
#
getgobp(g,result)
library(LAS)
getgobp(g,result)
getgobp(g,result)
library(LAS)
getgobp(g,result)
library(LAS)
getgobp(g,result)
library(LAS)
getgobp(g,result)
library(LAS)
getgobp(g,result)
wc
sizes(w)
sizes(wc)
length(w)
testz = result['9994',]
cutoff=0.8
w = names(testz[testz>cutoff])
subg <- induced.subgraph(graph=g,vids=w)
walktrap.community(subg)
w
testz = result['9994',]
cutoff=0.8
w = names(testz[testz>cutoff])
w
length(w)
getgobp(g,result)
library(LAS)
getgobp(g,result)
getgobp(g,result)
library(LAS)
library(LAS)
getgobp(g,result)
library(LAS)
getgobp(g,result)
library(LAS)
getgobp(g,result)
library(LAS)
getgobp(g,result)
library(LAS)
getgobp(g,result)
library(LAS)
getgobp(g,result)
library(LAS)
getgobp(g,result)
library(LAS)
getgobp(g,result)
library(LAS)
getgobp(g,result)
library(LAS)
com = getgobp(g,result)
com
como
com
{}
for(c in com)
{
print(names(c))
}
for(c in com)
{
print(names(com))
}
com
typeof(com)
com['9994']
ov
ov$Term
testz = result['5700',]
sel.entrez<-'5700'
all.entrez<-rownames(result)
params <- new("GOHyperGParams", geneIds=sel.entrez, universeGeneIds=all.entrez, ontology="BP", pvalueCutoff=0.01,conditional=F, testDirection="over", annotation="hgu133a.db")
Over.pres<-hyperGTest(params)
ov<-summary(Over.pres)
ov$Term
library(LAS)
resulttable = getgobp(g,result)
resulttable = getgobp(g,result)
library(LAS)
resulttable = getgobp(g,result)
library(LAS)
resulttable = getgobp(g,result)
ov$Term
library(LAS)
resulttable = getgobp(g,result)
library(LAS)
resulttable = getgobp(g,result)
sel.entrez<-'5700'
all.entrez<-rownames(result)
params <- new("GOHyperGParams", geneIds=sel.entrez, universeGeneIds=all.entrez, ontology="BP", pvalueCutoff=0.01,conditional=F, testDirection="over", annotation="hgu133a.db")
Over.pres<-hyperGTest(params)
ov<-summary(Over.pres)
ov$Term
result[1:10,]
result[1,]
library(LAS)
resulttable = getgobp(g,result)
sel.entrez<-'1000'
all.entrez<-rownames(result)
params <- new("GOHyperGParams", geneIds=sel.entrez, universeGeneIds=all.entrez, ontology="BP", pvalueCutoff=0.01,conditional=F, testDirection="over", annotation="hgu133a.db")
Over.pres<-hyperGTest(params)
ov<-summary(Over.pres)
ov$Term
library(LAS)
resulttable = getgobp(g,result)
library(LAS)
resulttable = getgobp(g,result)
library(LAS)
resulttable = getgobp(g,result)
sel.entrez<-'1000'
sel.entrez<-'1000'
params <- new("GOHyperGParams", geneIds=sel.entrez, universeGeneIds=all.entrez, ontology="BP", pvalueCutoff=0.01,conditional=F, testDirection="over", annotation="hgu133a.db")
Over.pres<-hyperGTest(params)
ov<-summary(Over.pres)
print(ov)
ov$Term
sel.entrez<-'1000'
getGo
library(LAS)
library(LAS)
getGo
getGo()
library(LAS)
library(LAS)
getGo()
getGo(x,y)
getGO()
getGO(all.entrez, sel.entrez)
sel.entrez
sel.entrez<-'1000'
sel.entrez
getGO(all.entrez, sel.entrez)
getGO(sel.entrez,all.entrez)
params <- new("GOHyperGParams", geneIds=sel.entrez, universeGeneIds=all.entrez, ontology="BP", pvalueCutoff=0.01,conditional=F, testDirection="over", annotation="hgu133a.db")
Over.pres<-hyperGTest(params)
ov<-summary(Over.pres)
print(ov)
ov$Term
library(LAS)
resulttable = getgobp(g,result)
params <- new("GOHyperGParams", geneIds=sel.entrez, universeGeneIds=all.entrez, ontology="BP", pvalueCutoff=0.01,conditional=F, testDirection="over", annotation="hgu133a.db")
Over.pres<-hyperGTest(params)
ov<-summary(Over.pres)
print(ov)
getGO(sel.entrez, all.entrez)
params <- new("GOHyperGParams", geneIds=sel.entrez, universeGeneIds=all.entrez, ontology="BP", pvalueCutoff=0.01,conditional=F, testDirection="over", annotation="hgu133a.db")
Over.pres<-hyperGTest(params)
print(Over.pres)
length(all.entrez)
library(LAS)
getGO(sel.entrez, all.entrez)
library(LAS)
resulttable = getgobp(g,result)
library(LAS)
resulttable = getgobp(g,result)
library(LAS)
resulttable = getgobp(g,result)
library(LAS)
resulttable = getgobp(g,result)
library(LAS)
resulttable = getgobp(g,result)
sel.entrez<-rownames(b)[1:5]
all.entrez<-rownames(b)
params <- new("GOHyperGParams", geneIds=sel.entrez, universeGeneIds=all.entrez, ontology="BP", pvalueCutoff=0.01,conditional=F, testDirection="over", annotation="hgu133a.db")
Over.pres<-hyperGTest(params)
ov<-summary(Over.pres)
ov$Term
library(LAS)
resulttable = getgobp(g,result)
resulttable = getgobp(g,result)
library(LAS)
resulttable = getgobp(g,result)
result
library(LAS)
resulttable = getgobp(g,result)
resulttable = getgobp(g,result)
library(LAS)
resulttable = getgobp(g,result)
neighgorhood(g,2,nodes='5700')
neighborhood(g,2,nodes='5700')
neighborhood(g,2,'1000')
neighborhood(g,2,c('1000')
neighborhood(g,2,c('1000'))
neighborhood(g,2,c('1000'))
neighborhood(g,2,c('1000'))
neighborhood(g,2,'1000')
neighborhood(g,2,nodes='5700')
neighborhood(g,2,nodes=c('5700'))
neighborhood(g,2,1)
neighborhood(g,2,V('5700'))
g
neighborhood(g,2,1:2)
neighborhood(g,2,1:2)
