ttt['780','5597']
h
h[,1:20]
h['142891',]
h['142891',1:20]
ttt['311','780']
h['311','780']
h['56302','780']
h
h['71','60']
h['71','103']
h['71','1143']
h['71','143']
h['311','780']
h['311','311']
h['311',]
h['311','406']
h['311','779']
hist(h['311',])
h['311',]
max(h['311',])
las(h,b)
las(g,b)
connected.list
connected.list[connected.list$from=="310"]
connected.list[connected.list$from=="311"]
connected.list[connected.list=="311"]
connected.list.names
connected.list.name
rowname(connected.list)
rownames(connected.list)
connected.list[1:5,]
connected.list['310']
connected.list[968]
connected.list[968,]
connected.list[968,]
print(connected.list[968,])
library(LAS)
las(g,b)
test = las(g,b)
library(LAS)
test = las(g,b)
test
test[46610]
las(g,b)
connnected.list[46610]
connected.list[46610]
connected.list[46610,]
connected.list[46611,]
test[46611]
las(g,b)
connected.list[1:5,]
size(connected.list)
length(connected.list)
nrow(connected.list)
connected.list[590407,]
connected.list[44610,]
sort(connected.list)
ls
h
h["310",]
h["310",'283248']
ttt['310','283248']
ttt['310','826']
adjacency1['283248',]
ttt['310','826']
ttt['310','283248']
adjacency1['283248','826']
adjacency2 <- get.adjacency(connect.neighborhood(g,2), type="both")-adjacency1
adjacency2
adjacency2['283248','826']
ttt['310','826']
ttt['310','283248']
relate.matrix%*%adjacency2['310','826']
h%*%adjacency2['310','826']
h%*%adjacency2['310','826']
h%*%adjacency2
test310 = h%*%adjacency2
test310['310','826']
h
h
h
adjacency2
test310 = h%*%adjacency2
test310['310','826']
findz(h,g)
result['310','826']
result['310','826']
result['310','826']
adjacency2['310','826']
adjacency2['310','826']
result['310','826']
relate.matrix%*%(adjacency2*weight2)
relate.matrix%*%(adjacency2*weight2)['310','826']
temp = relate.matrix%*%(adjacency2*weight2)
findz(h,g)
temp = relate.matrix%*%(adjacency2*weight2)
temp
temp[1:5,1:5]
temp['310','826']
result['310','826']
tempresult = temp+result
tempresult['310','826']
result['310','826']
findz(h,g)
tr = result + relate.matrix%*%(adjacency2*weight2)
tr['310','826']
tr = relate.matrix%*%(adjacency2*weight2)
tr['310','826']
tr = result + relate.matrix%*%(adjacency2*weight2)
tr['310','826']
result['310','826']
k = relate.matrix%*%(adjacency2*weight2)
k['310','826']
tempresult = result + relate.matrix%*%(adjacency2*weight2)
tempresult['310','826']
str(result)
ttt = findz(h,g)
str(ttt)
ttt['310','826']
dnorm(2)
library(LAS)
ttt = findz(h,g)
library(LAS)
ttt = findz(h,g)
ttt['310','826']
ttt['310','826']
library(LAS)
ttt = findz(h,g)
ttt['310','826']
library(LAS)
ttt = findz(h,g)
ttt['310','826']
nrom(0)
dnrom(0)
dnom(0)
dnorm(0)
result = dnorm(0)*h
result
ttt['310','826']
result2['310','826']
result2 = ttt
result2['310','826']
result['310','826']
temp = result+result2
temp['310','826']
m = as.matrix(result)
temp = m+result2
temp['310','826']
temp = as.matrix(result)+as.matrix(result2)
temp['310','826']
result['310','826']
result2['310','826']
as(result,"matrix")+as(result2,)
temp = as(result,"matrix")+as(result2,'matrix')
temp['310','826']
tempm = as(result,"matrix")
tempm
temp['310','826']
rowname(result)
rownames(result)
rownames(result2)
rownames(result)
rownames(result2)
rownames(result)
rownames(result2)
rownames(result)
rownames(result)
rownames(result2)
identical(rownames(result2),ronames(result))
identical(rownames(result2),rownames(result))
identical(colnames(result2),colnames(result))
colnames(result2)
colnames(result)
colnames(result2)
colnames(result)
colnames(result2)
findz(h,g)
colnames(adjacency1)
result
result[order(rownames(result)), ]
result[order(colnames(result)), ]
result[order(colnames(result)), ]
r = result[order(colnames(result)), ]
r[1:5,1:5]
r = result[order(colnames(result)), ]
r[1:5,1:5]
r = result[,order(colnames(result)) ]
r[1:5,1:5]
library(LAS)
library(igraph)
library(microbenchmark)
library(fdrtool)
network_list = as.matrix(read.table("/Users/danielqiu/Workspace/Bio/HumanBinaryHQ_HINT.txt"))
load("/Users/danielqiu/Workspace/Bio/GSE18864_entrez_norm.bin")
g = graph.data.frame(network_list, directed=FALSE)
library(LAS)
h = las(g,b,n.cores=8)
library(LAS)
library(LAS)
library(LAS)
library(LAS)
library(LAS)
h = las(g,b,n.cores=8)
library(foreach)
h = las(g,b,n.cores=8)
library(doParallel)
h = las(g,b,n.cores=8)
library(Matrix)
h = las(g,b,n.cores=8)
common = getCommonNode(g,b)
g = cleanGraph(g,common)
library(LAS)
h = las(g,b,n.cores=8)
important = h
ttt = findz(h,g)
library(LAS)
ttt = findz(h,g)
ttt['310','826']
ttt = findz(h,g)
adjacency1[1:5,1:5]
result[1:5,1:5]
library(LAS)
ttt = findz(h,g)
ttt['310','826']
ttt = 0
ttt[1:10,1:10]
library(LAS)
h = las(g,b,n.cores=8)
library(LAS)
h = las(g,b,n.cores=8)
install.packages("/Users/danielqiu/Workspace/Bio/LAS_1.0_src.tar.gz",repos = NULL, type="source")
library(LAS)
library(LAS)
result = z.kernel.density(important,g)
result[1:5,1:5]
write.csv(as.matrix(result),file="result.csv")
weight1 = dnorm(1)
library(LAS)
newresult = z.kernal.density(important,g)
newresult = z.kernel.density(important,g)
identity(newreult,result)
identical(newreult,result)
identical(newreult,result)
identical(newresult,result)
newresult[1:5,1:5]
result[1:5,1:5]
all.equal(result, newresult)
library(LAS)
newresult = z.kernel.density(important,g)
all.equal(result, newresult)
library(LAS)
library(LAS)
newresult = z.kernel.density(important,g)
test = c(1,2,3)
1/test
library(LAS)
newresult = z.kernel.density(important,g)
library(LAS)
newresult = z.kernel.density(important,g)
Q
library(LAS)
newresult = z.kernel.density(important,g)
library(LAS)
newresult = z.kernel.density(important,g)
newresult
newresult[1:5,1:5]
library(LAS)
newresult = z.kernel.density(important,g)
library(LAS)
newresult = z.kernel.density(important,g)
newresult[1:5,1:5]
result[1:5,1:5]
library(LAS)
newresult = z.kernel.density(important,g)
newresult = z.kernel.density(important,g)
library(LAS)
newresult = z.kernel.density(important,g)
result[1:5,1:5]
newresult[1:5,1:5]
newresult = z.kernel.density(important,g,smoothing.normalize="squareM")
newresult[1:5,1:5]
write.csv(newresult,file="squareM")
write.csv(as.matrix(newresult),file="squareM")
newresult = z.kernel.density(important,g)
write.csv(as.matrix(newresult),file="one.csv")
newresult[1:5,1:5]
library(GGally)
library(intergraph)
library(network)
network = asNetwork(g)
ggnet(network)
ggnet(network)
relate.matrix = h
relate.matrix
relate.matrix['83878',]
which(relate.matrix['83878',])
which(relate.matrix['83878',]==1)
relate.matrix['83878',]
relate.matrix['83878',1:5]
which(relate.matrix['83878',]==1)
testdata = relate.matrix['83878',]
testdata[testdata==1]
rownames(testdata[testdata==1])
which(testdata[testdata==1])
colnames(testdata[testdata==1])
names(testdata[testdata==1])
target = names(testdata[testdata==1])
istarget = target %in% V(g)
istarget = target %in% rownames(result)
ggnet(network, size=3,node.group=istarget,color="green")
ggnet(network, size=3,node.group=istarget)
istarget
istarget = rownames(result) %in% target
istarget
ggnet(network, size=3,node.group=istarget,color="green")
target = names(testdata[testdata==1])
relate.matrix
testdata =relate.matrix['112840',]
target = names(testdata[testdata==1])
istarget = rownames(result) %in% target
ggnet(network, size=3,node.group=istarget,color="blue")
testdata =relate.matrix['142891',]
target = names(testdata[testdata==1])
istarget = rownames(result) %in% target
ggnet(network, size=3,node.group=istarget,color="blue")
target
ggnet(network, size=3,node.group=istarget,color="blue")
testdata =relate.matrix['348487',]
target = names(testdata[testdata==1])
istarget = rownames(result) %in% target
ggnet(network, size=3,node.group=istarget,color="blue")
relate.matrix
relate.matrix[2000:3000,]
testdata =relate.matrix['5700',]
target = names(testdata[testdata==1])
istarget = rownames(result) %in% target
ggnet(network, size=3,node.group=istarget,color="blue" ,alpha = .25,)
testdata =relate.matrix['571',]
target = names(testdata[testdata==1])
istarget = rownames(result) %in% target
ggnet(network, size=3,node.group=istarget,color="blue" ,alpha = .25,)
ggnet(network, size=3,node.group=istarget,color="blue" ,)
testdata =relate.matrix['1031',]
target = names(testdata[testdata==1])
istarget = rownames(result) %in% target
ggnet(network, size=3,node.group=istarget,color="blue" ,)
testdata =relate.matrix['1164',]
target = names(testdata[testdata==1])
istarget = rownames(result) %in% target
ggnet(network, size=3,node.group=istarget,color="blue" ,)
terget.graph = induced.subgraph(graph=g,vids=target)
library(igraph)
terget.graph = induced.subgraph(graph=g,vids=target)
network = asnetwork(terget.graph)
network = asNetwork(terget.graph)
ggnetwork(network)
ggnet(network)
ggnet(network,size=3)
testdata =relate.matrix['5700',]
target = names(testdata[testdata==1])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=3)
testdata =relate.matrix['1031',]
target = names(testdata[testdata==1])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=3)
testdata =relate.matrix['1398',]
target = names(testdata[testdata==1])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=3)
1031
1031
1031
testdata =relate.matrix['1031',]
target = names(testdata[testdata==1])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=3)
5700
testdata =relate.matrix['5700',]
target = names(testdata[testdata==1])
istarget = rownames(result) %in% target
ggnet(network, size=3,node.group=istarget,color="blue" ,)
testdata =relate.matrix['5700',]
target = names(testdata[testdata==1])
network = asNetwork(g)
istarget = rownames(result) %in% target
ggnet(network, size=3,node.group=istarget,color="blue" ,)
testdata =relate.matrix['5700',]
target = names(testdata[testdata==1])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=3)
ggnet(network,size=3,segment.size=.8)
ggnet(network,size=4,segment.size=1)
testdata =relate.matrix['9354',]
target = names(testdata[testdata==1])
network = asNetwork(g)
istarget = rownames(result) %in% target
ggnet(network, size=3,node.group=istarget,color="blue" ,)
testdata =relate.matrix['9354',]
target = names(testdata[testdata==1])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=4,segment.size=1)
newresult['9354',]
testdata =newresult['9354',]
target = names(testdata[testdata>0.5])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=4,segment.size=1)
target = names(testdata[testdata>1])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=4,segment.size=1)
testdata =newresult['9354',]
target = names(testdata[testdata>1.5])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=4,segment.size=1)
index.top.N = function(xs, N=10){
if(length(xs) > 0) {
o = order(xs, na.last=FALSE)
o.length = length(o)
if (N > o.length) N = o.length
o[((o.length-N+1):o.length)]
}
else {
0
}
}
index.top.N(testdata,N=10)
target = index.top.N(testdata,N=40)
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=4,segment.size=1)
testdata =newresult['9354',]
target = index.top.N(testdata,N=40)
target
target = names(testdata)[index.top.N(testdata,N=40)]
target
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=4,segment.size=1)
testdata =newresult['9354',]
target = names(testdata[testdata>0.5])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=4,segment.size=1)
testdata =newresult['9354',]
target = names(testdata[testdata>1])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=4,segment.size=1)
testdata =newresult['9354',]
target = names(testdata[testdata>1.5])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=4,segment.size=1)
testdata =relate.matrix['5700',]
5700
testdata =newresult['5700',]
testdata
target = names(testdata[testdata>1.5])
target
1
target
target = names(testdata[testdata>0.5])
target
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=4,segment.size=1)
testdata =newresult['5700',]
target = names(testdata[testdata>0.5])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=4,segment.size=1)
testdata =relate.matrix['5700',]
target = names(testdata[testdata==1])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=4,segment.size=1)
testdata =newresult['5700',]
target = names(testdata[testdata>0.5])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=4,segment.size=1)
testdata =newresult['5700',]
target = names(testdata[testdata>0.75])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=4,segment.size=1)
testdata =newresult['5700',]
target = names(testdata[testdata>0.6])
terget.graph = induced.subgraph(graph=g,vids=target)
network = asNetwork(terget.graph)
ggnet(network,size=4,segment.size=1)
target = names(testdata)[index.top.N(testdata,N=40)]
network = asNetwork(g)
library(GGally)
library(intergraph)
library(netwo
rk)
library(GGally)
library(intergraph)
library(network)
network = asNetwork(g)
ggnet(network,size=4,segment.size=1)
